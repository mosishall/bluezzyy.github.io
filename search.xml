<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[使用Hexo搭建个人博客(二)]]></title>
      <url>/2017/12/29/%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%E4%BA%8C/</url>
      <content type="html"><![CDATA[<h1 id="本文说明："><a href="#本文说明：" class="headerlink" title="本文说明："></a>本文说明：</h1><p>本文是使用Hexo搭建个人博客系列的第二篇，主要包括  </p>
<ul>
<li>本地安装hexo</li>
<li>服务器配置</li>
<li>把个人博客部署到服务器</li>
</ul>
<p>关于购买VPS和注册域名，解析域名到IP请看：<a href="https://www.bluelzy.com/2017/12/25/Hexo搭建个人博客-一/">Hexo搭建个人博客(一)</a></p>
<p>接下来让我们一步步把博客给搭建起来，跟着这篇博客做，最终就可以把博客部署到服务器上，并且运行起来~</p>
<h1 id="本地环境配置"><a href="#本地环境配置" class="headerlink" title="本地环境配置"></a>本地环境配置</h1><h2 id="安装依赖环境"><a href="#安装依赖环境" class="headerlink" title="安装依赖环境"></a>安装依赖环境</h2><p>安装Hexo需要先安装node.js和git</p>
<ul>
<li>下载Node.js : <a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">Node.js下载地址</a></li>
<li>下载Git: <a href="https://git-scm.com/download/" target="_blank" rel="noopener">Git下载地址</a></li>
</ul>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>只需要一行命令：</p>
<pre><code>$ npm install hexo-cli -g
</code></pre><p>例如我的博客目录是 /MyBlog<br>通过命令   </p>
<pre><code>cd /MyBlog
</code></pre><p>切换到博客目录</p>
<p>然后在博客目录下初始化hexo博客，blog为博客名，可随意更改</p>
<pre><code>hexo init blog  
</code></pre><p>进入博客目录并安装插件依赖  </p>
<pre><code>cd blog
npm install
</code></pre><p>最后执行命令</p>
<pre><code>hexo g
hexo s 
</code></pre><p>顺利的话，应该能看到终端打印出地址：<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p>
<p>点击地址打开浏览器，应该能看到Hexo默认主题的界面了~当然，我的主题已经换了，所以打开是这样的：</p>
<p><img src="http://img.blog.csdn.net/20171229235500131?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYmx1ZV96eQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="首页"></p>
<h2 id="安装部署依赖环境"><a href="#安装部署依赖环境" class="headerlink" title="安装部署依赖环境"></a>安装部署依赖环境</h2><p>部署Hexo使用</p>
<pre><code>hexo deploy
</code></pre><p>命令即可，但是在这之前，需要先安装依赖环境server和deploy-git</p>
<p>在终端输入：</p>
<pre><code>$ npm install hexo-server --save  #
$ npm install hexo-deployer-git --save
</code></pre><p>至此，本地环境就搭建好了，除了这个，我们还需要搭建服务器的环境，所以接下来就是服务器的配置。</p>
<h1 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h1><h2 id="安装Git和NodeJS"><a href="#安装Git和NodeJS" class="headerlink" title="安装Git和NodeJS"></a>安装Git和NodeJS</h2><p>只需要两行命令</p>
<pre><code>$ yum install git  # 安装git

curl --silent --location https://rpm.nodesource.com/setup_5.x | bash -   # 安装NodeJS
</code></pre><h2 id="创建Git用户"><a href="#创建Git用户" class="headerlink" title="创建Git用户"></a>创建Git用户</h2><blockquote>
<p>为了能让Hexo直接部署到VPS上，需要在服务器新建用户git</p>
</blockquote>
<ul>
<li>步骤：</li>
</ul>
<pre><code>adduser git    # 添加git用户
sudo passwd git  # 给git用户设置密码  
chmod 740 /etc/sudoers  
vim /etc/sudoers
</code></pre><p>然后找到这一行</p>
<pre><code>## Allow root to run any commands anywhere
root    ALL=(ALL)     ALL
</code></pre><p>并添加</p>
<pre><code>git ALL=(ALL) ALL
</code></pre><p>接下来我们需要把电脑的公钥配置到服务器，这样才能向服务器提交代码</p>
<pre><code>su git
mkdir ~/.ssh
vim ~/.ssh/authorized_keys
#然后在本地执行 cat ~/.ssh/id_rsa.pub | pbcopy ,将公钥复制粘贴到authorized_keys
chmod 600 ~/.ssh/authorzied_keys
chmod 700 ~/.ssh
</code></pre><p>OK，到这里，我们就把服务器git用户给配置完了，可以通过命令</p>
<pre><code>ssh -v git@SERVER  # SERVER是你的服务器地址
</code></pre><p>来测试一下，是不是可以免密码登陆到服务器，如果可以，那就说明没问题了。</p>
<h2 id="安装和配置Nginx"><a href="#安装和配置Nginx" class="headerlink" title="安装和配置Nginx"></a>安装和配置Nginx</h2><h3 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h3><p>由于我的vps上运行的是CentOS 6 的系统，直接安装Nginx会报错，解决方法请参考这篇博客：<a href="https://www.bluelzy.com/2017/12/28/CentOS-6安装Nginx/">CentOS 6 安装Nginx</a></p>
<p>CentOS 7 可以直接执行命令：  </p>
<pre><code>$ sudo yum install epel-release
$ sudo yum install nginx    
</code></pre><p>然后再启动Nginx：</p>
<pre><code>sudo systemctl start nginx
</code></pre><p>CentOS 6 启动Nginx的命令应该是：</p>
<pre><code>/etc/init.d/nginx start
</code></pre><p>这个时候在浏览器输入服务器ip地址或者域名，就能看到Nginx欢迎页。</p>
<h3 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h3><ul>
<li>在 /etc/nginx/conf.d/ 创建虚拟主机配置文件 blog.conf</li>
</ul>
<p>加入以下内容： </p>
<ul>
<li>server_name: 改成你的服务器名字，或者域名  </li>
<li>root: 改成你的博客根目录</li>
</ul>
<pre><code>server
{
    listen 80;
    #listen [::]:80;
    server_name  bluelzy.com www.bluelzy.com;
    index index.html index.htm index.php default.html default.htm default.php;
    #这里要改成网站的根目录
    root  /var/www/hexo;  

    include other.conf;
}
</code></pre><p>然后再重启一下Nginx，即可  </p>
<pre><code>service nginx restart
</code></pre><h2 id="创建Git仓库"><a href="#创建Git仓库" class="headerlink" title="创建Git仓库"></a>创建Git仓库</h2><p>既然本地环境配好了，服务器所需要的环境也配好了，那么现在就需要在服务器建一个仓库，用来管理博客的代码，这一块比较重要，关乎到能不能成功部署博客。  </p>
<p>其实就是两步：  </p>
<ul>
<li>创建仓库  </li>
<li>设置git hook</li>
</ul>
<h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><p>执行以下命令：</p>
<pre><code>$ cd ~ 
$ mkdir blog.git &amp;&amp; cd blog.git
$ git init --bare
</code></pre><p>解释一下这一行：</p>
<pre><code>git init --bare
</code></pre><p>意思是初始化一个裸仓库，创建一个裸仓库，并且这个仓库是可以被正常 clone 和 push 更新的， 裸仓库不包含工作区，所以并不会存在在裸仓库上直接提交变更的情况。</p>
<h3 id="设置git-hook"><a href="#设置git-hook" class="headerlink" title="设置git hook"></a>设置git hook</h3><p>我们使用 post-receive这个钩子.在 ~/blog.git 裸库的 hooks文件夹中，<br>新建post-receive文件。</p>
<pre><code>vim ~/blog.git/hooks/post-receive
</code></pre><p>在文件中加入：</p>
<pre><code>#!/bin/sh
git --work-tree=/var/www/hexo --git-dir=~/blog.git checkout -f
</code></pre><p><strong>注意： –work-tree=/var/www/hexo 要改成你的博客根目录，也就是上面Nginx配置文件中的root</strong></p>
<p>保存退出(wq)</p>
<p>然后再赋予这个文件运行的权限</p>
<pre><code>chmod +x post-receive
</code></pre><p>OK,到这一步，服务器的配置也已经全部完成了。</p>
<p><strong>恭喜你，如果能按着博客一步步看到这里，并且一切正常，那么你离成功搭建一个博客，还差最后一步….</strong></p>
<h1 id="本地配置-config-yml"><a href="#本地配置-config-yml" class="headerlink" title="本地配置_config.yml"></a>本地配置_config.yml</h1><p>打开Hexo站点目录下的_config.yml文件，找到 <strong>deploy</strong>关键字</p>
<pre><code>deploy:
    type: git
    repo: git@SERVER:/home/git/blog.git    // 仓库地址
    branch: master      
    message: 提交的信息
</code></pre><p>把SERVER改成你的服务器地址，然后保存文件，大功告成！</p>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>我们使用</p>
<pre><code>hexo clean
hexo g
hexo d
</code></pre><p>把Hexo从本地部署到服务器上，执行完之后，在浏览器访问你的服务器地址，应该就能看到博客首页了。</p>
<p>以后写好文章，再执行上面这三句命令，就可以实现自动化部署了，真是人生一大乐事(捂嘴)</p>
<h1 id="总结-amp-期望"><a href="#总结-amp-期望" class="headerlink" title="总结&amp;期望"></a>总结&amp;期望</h1><p>这篇文章从本地环境到服务器环境，再到自动化部署都作了一个详细的说明，从无到有搭建起了一个个人博客。接下来我会结合自己的博客，介绍一下</p>
<ul>
<li>主题选择</li>
<li>主题配置</li>
<li>第三方服务</li>
</ul>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://eliyar.biz/how_to_build_hexo_blog/" target="_blank" rel="noopener">从 0 开始搭建 hexo 博客</a></li>
<li><a href="https://segmentfault.com/a/1190000005723321" target="_blank" rel="noopener">阿里云VPS搭建自己的的Hexo博客</a></li>
<li><a href="http://sobaigu.com/Hexo-git-to-vps.html" target="_blank" rel="noopener">开始新的折腾，Hexo博客Git-VPS部署完整记录</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 技术向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> vps </tag>
            
            <tag> godaddy </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Vim简单入门]]></title>
      <url>/2017/12/28/Vim%E7%AE%80%E5%8D%95%E5%85%A5%E9%97%A8/</url>
      <content type="html"><![CDATA[<h3 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h3><p>刚进入vim 都是该模式<br>想要插入字符：请按键盘上的i 切换到插入模式<br>键盘上的 “:” 切换到底线命令模式，在最底一行输入命令。</p>
<h3 id="插入模式"><a href="#插入模式" class="headerlink" title="插入模式"></a>插入模式</h3><p>想要退出到<strong>命令模式</strong><br>请点击键盘上的<strong>esc</strong> </p>
<p>在输入模式中，可以使用以下按键：  </p>
<ul>
<li>字符按键以及Shift组合，输入字符  </li>
<li>ENTER，回车键，换行  </li>
<li>BACK SPACE，退格键，删除光标前一个字符  </li>
<li>DEL，删除键，删除光标后一个字符    </li>
<li>方向键，在文本中移动光标  </li>
<li>HOME/END，移动光标到行首/行尾  </li>
<li>Page Up/Page Down，上/下翻页  </li>
<li>Insert，切换光标为输入/替换模式，光标将变成竖线/下划线  </li>
<li>ESC，退出输入模式，切换到命令模式  </li>
</ul>
<h3 id="底线命令模式"><a href="#底线命令模式" class="headerlink" title="底线命令模式"></a>底线命令模式</h3><ul>
<li>q 不保存,直接退出  </li>
<li>q! 不保存，并强制退出  </li>
<li>e! 放弃所有修改，从上次保存文件开始再编辑  </li>
<li>w 保存文件,但不退出  </li>
<li>w! 强制保存，不退出  </li>
<li>wq或x 保存，并退出  </li>
<li>wq! 强制保存，并退出  </li>
</ul>
<h3 id="一般操作步骤"><a href="#一般操作步骤" class="headerlink" title="一般操作步骤"></a>一般操作步骤</h3><ul>
<li>vim file_name 打开文件</li>
<li>此时是命令模式 按<strong>i</strong> 进入<strong>插入模式</strong>，进行自己需要的修改</li>
<li>按<strong>esc</strong> 返回到命令模式，按 <strong>:</strong> 进入底线命令模式</li>
<li>输入wq 保存并退出</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 技术向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Vim </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS 6 安装Nginx]]></title>
      <url>/2017/12/28/CentOS-6%E5%AE%89%E8%A3%85Nginx/</url>
      <content type="html"><![CDATA[<h1 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h1><blockquote>
<p>直接yum install nginx -y 会报package not found 的错</p>
</blockquote>
<h1 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h1><ul>
<li>在/etc/yum.repos.d/目录下创建一个源配置文件nginx.repo：</li>
</ul>
<pre><code>cd /etc/yum.repos.d/

vim nginx.repo
</code></pre><ul>
<li>填写如下内容：</li>
</ul>
<pre><code>[nginx]
name=nginx repo
baseurl=http://nginx.org/packages/centos/$releasever/$basearch/
gpgcheck=0
enabled=1
</code></pre><ul>
<li>保存，则会产生一个/etc/yum.repos.d/nginx.repo文件。</li>
</ul>
<p>我们现在再来执行Nginx安装命令：</p>
<pre><code>yum install nginx -y
</code></pre><p>现在应该就可以顺利安装了</p>
<p>安装完成，下面直接就可以启动Nginx了：</p>
<pre><code>/etc/init.d/nginx start
</code></pre><p>访问服务器，如无意外，应该就能看到Nginx欢迎页面了。  </p>
<p>搞定收工~</p>
<h1 id="备注："><a href="#备注：" class="headerlink" title="备注："></a>备注：</h1><p>如果对vim不熟悉的可以百度或者google一下<br>也可以看我写的这篇：<a href="https://www.bluelzy.com/2017/12/28/Vim简单入门/">Vim简单入门</a></p>
]]></content>
      
        <categories>
            
            <category> 技术向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Nginx </tag>
            
            <tag> CentOS 6 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用Hexo搭建个人博客(一)]]></title>
      <url>/2017/12/25/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%E4%B8%80/</url>
      <content type="html"><![CDATA[<h1 id="本文说明："><a href="#本文说明：" class="headerlink" title="本文说明："></a>本文说明：</h1><p>本文是使用Hexo搭建个人博客系列的第一篇，主要是介绍一些准备工作，也是作为搭建<a href="https://www.bluelzy.com">本人博客</a>的过程回顾，主要包括   </p>
<ul>
<li>购买VPS</li>
<li>注册域名</li>
<li>解析域名</li>
</ul>
<p>注意：如果不希望自己花费太多RMB的话，也可以选择部署到github pages上，可以参考<a href="https://linghucong.js.org/2016/04/15/2016-04-15-hexo-github-pages-blog/" target="_blank" rel="noopener">手把手教你使用Hexo + Github Pages搭建个人独立博客</a>  </p>
<p>原理其实都是类似的，本博客的搭建使用VPS + Hexo</p>
<p>OK，接下来就一步步来准备这些所需的搭建环境。</p>
<h1 id="购买VPS"><a href="#购买VPS" class="headerlink" title="购买VPS"></a>购买VPS</h1><h2 id="去哪里买"><a href="#去哪里买" class="headerlink" title="去哪里买"></a>去哪里买</h2><p>我是在搬瓦工上购买的,最便宜的9.9和19.9美元/年的方案已经卖完了，所以我选择的是29.9$/年的，折算下来大概是185RMB，毕竟有自己的服务器，搭建博客只是其中一个小用途而已，还能用他做很多别的事情，所以我觉得还是很划算的。最重要的是 <strong>他支持支付宝啊~</strong></p>
<p>附上链接：<a href="https://bwh1.net/index.php" target="_blank" rel="noopener">搬瓦工VPS官网</a></p>
<h2 id="路线选择"><a href="#路线选择" class="headerlink" title="路线选择"></a>路线选择</h2><p>推荐选择KVM + CN2 ping值稳定在150ms左右，速度还是可以接受的</p>
<h2 id="购买步骤"><a href="#购买步骤" class="headerlink" title="购买步骤"></a>购买步骤</h2><p>进入搬瓦工的官网，选择VPS Hosting 看到下面有不同配置和价格的主机，选择适合自己的，然后点击 <strong>order kvm</strong></p>
<p><img src="http://img.blog.csdn.net/20171225221244083?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYmx1ZV96eQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="购买vps"></p>
<p>确认订单，然后点击add to cart 加入购物车</p>
<p><img src="http://img.blog.csdn.net/20171225221058577?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYmx1ZV96eQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="购买VPS"></p>
<p>确认无误后，点击checkout</p>
<p><img src="http://img.blog.csdn.net/20171225221313656?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYmx1ZV96eQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="购买VPS"></p>
<p>填写个人信息，这里邮箱要写真实的，其他可以随便写<br>付款方式选择alipay 也就是支付宝，然后扫码完成付款即可</p>
<p><img src="http://img.blog.csdn.net/20171225221336305?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYmx1ZV96eQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="购买VPS"></p>
<h2 id="其他推荐"><a href="#其他推荐" class="headerlink" title="其他推荐"></a>其他推荐</h2><ol>
<li><strong>Vultr</strong><br><a href="https://www.vultr.com/" target="_blank" rel="noopener">Vultr官网地址</a><br>支持Paypal、信用卡或比特币付款。需要充值验证后才能开通VPS.  </li>
<li><strong>Linode</strong><br><a href="https://www.linode.com/" target="_blank" rel="noopener">Linode官网地址</a><br>老牌VPS提供商，价格也会比较贵，配置高，服务好.</li>
</ol>
<h1 id="注册域名"><a href="#注册域名" class="headerlink" title="注册域名"></a>注册域名</h1><p>关于购买域名，我是在大名鼎鼎的<strong>狗爹(godaddy)</strong>上买的，没有选择国内的万网，因为自己的网站也不打算备案。接下来简单的写一下购买步骤</p>
<p>附上官网地址：<a href="https://sg.godaddy.com/zh/" target="_blank" rel="noopener">狗爹官网</a></p>
<p>狗爹已经完全支持中文了，而且最重要的是，他也支持支付宝，按照步骤操作，应该是没太大问题的~</p>
<h1 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名"></a>解析域名</h1><p>OK，现在我们有了服务器，也有了域名，需要做的就是把域名和服务器绑定起来，我使用的是<strong>Dnspod</strong></p>
<ul>
<li>官方教程：<a href="https://support.dnspod.cn/Kb/showarticle/tsid/177/" target="_blank" rel="noopener">DNSPOD域名解析</a></li>
<li><p>修改Godaddy的DNS解析: <a href="https://support.dnspod.cn/Kb/showarticle/tsid/42/" target="_blank" rel="noopener">godaddy修改DNS</a></p>
<p>总结一下，首先在Dnspod上注册账号，填入需要解析的域名和ip，然后会生成dns服务器，最后把godaddy的dns服务改成刚刚生成的那两个dnf服务器地址即可，输入域名应该就能访问到你的网站啦~<br><strong>上面的两个教程都说的很清楚了，还有困惑的欢迎留言~</strong></p>
</li>
</ul>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p> 这篇文章主要是搭建博客的前期准备，下一篇文章我们就正式开始使用hexo搭建博客了，主要介绍  </p>
<ul>
<li>本地安装hexo</li>
<li>服务器配置nginx</li>
<li>把个人博客部署到服务器</li>
</ul>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://www.jianshu.com/p/252b542b1abf" target="_blank" rel="noopener">Blog绑定域名——Godaddy + DNSPod</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 技术向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> vps </tag>
            
            <tag> godaddy </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Shuttle安装以及配置简介]]></title>
      <url>/2017/12/21/Shuttle%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B/</url>
      <content type="html"><![CDATA[<h1 id="本文说明："><a href="#本文说明：" class="headerlink" title="本文说明："></a>本文说明：</h1><p>本文介绍Shuttle的安装以及配置，主要是根据<strong><a href="https://github.com/fitztrev/shuttle/wiki" target="_blank" rel="noopener">Github上的官方文档</a></strong>进行翻译说明，还有自己的一些补充，如果习惯直接看文档的朋友，可以直接关掉这篇文章了~</p>
<h2 id="Shuttle是什么"><a href="#Shuttle是什么" class="headerlink" title="Shuttle是什么"></a>Shuttle是什么</h2><p><a href="http://fitztrev.github.io/shuttle/" target="_blank" rel="noopener">点击我跳转到Shuttle的Github</a>  </p>
<p>看一下官方简介，就一句话  </p>
<pre><code>A simple SSH shortcut menu for macOS
</code></pre><p>顾名思义，就是一个Mac上管理SSH的工具<br><br></p>
<h2 id="Shuttle怎么用"><a href="#Shuttle怎么用" class="headerlink" title="Shuttle怎么用"></a>Shuttle怎么用</h2><p>接下来，让我给大家介绍一下Shuttle的用法 </p>
<ol>
<li><h3 id="安装Shuttle"><a href="#安装Shuttle" class="headerlink" title="安装Shuttle"></a>安装Shuttle</h3><p>首先到Shuttle的官网下载：<br><a href="http://fitztrev.github.io/shuttle/" target="_blank" rel="noopener">点击我跳转到下载地址</a><br>然后把Shuttle复制到Application文件夹下即可</p>
</li>
<li><h3 id="Shuttle配置"><a href="#Shuttle配置" class="headerlink" title="Shuttle配置"></a>Shuttle配置</h3><p><strong>这部分是本文的重点，敲黑板</strong><br>通过命令 <strong>open ~/.shuttle.json</strong> 打开.shuttle.json文件  </p>
<h4 id="Global-settings-全局配置"><a href="#Global-settings-全局配置" class="headerlink" title="Global settings 全局配置"></a>Global settings 全局配置</h4><ul>
<li><p>“editor”: “VALUE”,  设置编辑器，可选项default, nano, vi, vim  </p>
</li>
<li><p>“launch_at_login”: VALUE, 设置是否开机启动   </p>
</li>
<li><p>“terminal”: “VALUE”, 设置终端，一般是Terminal.app或者iTerm  </p>
</li>
<li><p>“iTerm_version”: “VALUE”, 设置iTerm版本，分别有三种  </p>
<pre><code>      &quot;iTerm\_version&quot;: &quot;legacy&quot;,  2.14版本  
   &quot;iTerm\_version&quot;: &quot;stable&quot;, 最新版本
   &quot;iTerm\_version&quot;: &quot;nightly&quot;, nightly build 版本 
</code></pre><ul>
<li><p>“default_theme”: “Homebrew” 设置终端主题  </p>
</li>
<li><p>open_in”: “VALUE” 有两个可选项 Tab 或者 new 顾名思义，新建一个Tab 或者 在新窗口执行命令</p>
</li>
<li>“show_ssh_config_hosts”: VALUE 设置是否解析config文件，默认是true</li>
<li>“ssh_config_ignore_keywords”: [“VALUE”] 设置忽略解析的关键字</li>
</ul>
<h4 id="Command-settings-命令配置"><a href="#Command-settings-命令配置" class="headerlink" title="Command settings 命令配置"></a>Command settings 命令配置</h4><ul>
<li><p>“cmd”: “VALUE” 设置命令<br>例如 <strong>“cmd”: “ps aux | grep [s]sh”</strong></p>
</li>
<li><p>“name”: “VALUE” 设置菜单栏显示的名称</p>
</li>
<li><p>“inTerminal”: “VALUE” </p>
<pre><code> new 新建一个窗口执行命令  
 tab 新建一个Tab执行命令  
 current 在当前窗口执行命令
</code></pre></li>
<li><p>“theme”: “VALUE” 设置主题~我用的是basic</p>
</li>
<li>“title”: “VALUE” 这个标题是显示在终端窗口的标题~</li>
</ul>
</li>
</ul>
</li>
</ol>
<h2 id="Shuttle示例"><a href="#Shuttle示例" class="headerlink" title="Shuttle示例"></a>Shuttle示例</h2><pre><code>&quot;hosts&quot;: [
    {
      &quot;cmd&quot;: &quot;ssh root@127.0.0.1 -p 4000&quot;,
      &quot;inTerminal&quot;: &quot;tab&quot;,
      &quot;name&quot;: &quot;SSH - root用户&quot;,
      &quot;theme&quot;: &quot;basic&quot;,
      &quot;title&quot;: &quot;Blue&quot;
    },
    {
      &quot;cmd&quot;: &quot;ssh root@127.0.0.1 -p 4000&quot;,
      &quot;inTerminal&quot;: &quot;tab&quot;,
      &quot;name&quot;: &quot;SSH - git用户&quot;,
      &quot;theme&quot;: &quot;basic&quot;,
      &quot;title&quot;: &quot;Blue&quot;
    }
    ]
</code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>shuttle 除了可以用来当SSH管理工具以外，还能执行多条命令操作，提高效率，只要用分号分隔即可    </p>
<pre><code> 例如 pwd; ls; cd /; 就会按顺序执行以上三条命令。  
</code></pre><p>好了，本文只是简单介绍了shuttle的基本用法，欢迎大家一起交流学习~</p>
]]></content>
      
        <categories>
            
            <category> 休闲类 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 开发工具 </tag>
            
            <tag> shuttle </tag>
            
            <tag> linux </tag>
            
            <tag> github </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第一篇文章]]></title>
      <url>/2017/12/17/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      <content type="html"><![CDATA[<p>emmm….<br>接下来打算写写搭建这个博客的过程。毕竟捣鼓了整整一个周末<br>这个博客不仅仅会写技术，也会记录日常生活~<br>反正就是一个想到什么写什么的地方<br><br><br><br><br><br>  </p>
<p>我是Blue</p>
<p>嘻嘻</p>
]]></content>
      
        <categories>
            
            <category> 日常说 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
